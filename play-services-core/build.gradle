/*
 * SPDX-FileCopyrightText: 2013 microG Project Team
 * SPDX-License-Identifier: Apache-2.0
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

configurations {
    defaultRuntimeOnly
}

dependencies {
    implementation "com.squareup.wire:wire-runtime:$wireVersion"
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    includeProjects.each { projectName ->
        //noinspection DependencyNotationArgument
        implementation project(projectName)
    }

    // AndroidX Legacy
    implementation "androidx.legacy:legacy-support-v4:$androidXLegacyVersion"

    // AndroidX UI
    implementation "androidx.multidex:multidex:$multidexVersion"
    //noinspection GradleDependency
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    //noinspection GradleDependency
    implementation "androidx.mediarouter:mediarouter:$mediarouterVersion"
    implementation "androidx.preference:preference-ktx:$preferenceVersion"
    //noinspection GradleDependency
    implementation "androidx.webkit:webkit:$webkitVersion"

    // Material Components
    //noinspection GradleDependency
    implementation "com.google.android.material:material:$materialVersion"

    // Navigation
    //noinspection GradleDependency
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    //noinspection GradleDependency
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    implementation "com.android.volley:volley:$volleyVersion"

    //noinspection GradleDependency
    implementation "androidx.lifecycle:lifecycle-service:$lifecycleVersion"
    //noinspection GradleDependency
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
}

android {
    namespace "$applicationNamespace"

    compileSdkVersion androidCompileSdk
//    buildToolsVersion "$androidBuildVersionTools"

    buildFeatures {
        buildConfig = true
    }

    defaultConfig {
        applicationId "${basePackageName}.android.gms"

        versionName version
        versionCode appVersionCode

        minSdkVersion androidMinSdk
        targetSdkVersion androidTargetSdk

        multiDexEnabled true
        multiDexKeepProguard file('multidex-keep.pro')

        androidResources.localeFilters += "vi"

        ndk {
            abiFilters "arm64-v8a"
        }

        buildConfigField "String", "APPLICATION_NAMESPACE", "\"${android.namespace}\""
        buildConfigField "String", "BASE_PACKAGE_NAME", "\"$basePackageName\""
        buildConfigField "String", "INCLUDED_PROJECTS", "\"${includeProjects.join(",")}\""
        //noinspection GroovyConstructorNamedArguments
        manifestPlaceholders = [
                basePackageName: "$basePackageName"
        ]

        // provide package name to xml resources
        resValue "string", "var_authenticator_account_type", "$basePackageName"
        resValue "string", "var_contact_syncadapter_account_type", "$basePackageName"
        resValue "string", "var_pref_auth_action_security_settings", "${basePackageName}.android.gms.accountsettings.SECURITY_SETTINGS"
        resValue "string", "var_pref_auth_action_privacy_settings", "${basePackageName}.android.gms.accountsettings.PRIVACY_SETTINGS"
        resValue "string", "var_pref_auth_action_preferences_settings", "${basePackageName}.android.gms.accountsettings.ACCOUNT_PREFERENCES_SETTINGS"
        resValue "string", "var_pref_start_gms_package", "${basePackageName}.android.gms"
    }

    buildFeatures {
        //noinspection DataBindingWithoutKapt
        dataBinding = true
    }

    sourceSets {
        main {
            java.srcDirs += 'src/main/kotlin'
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions = ['target']
    productFlavors {
        "default" {
            dimension 'target'
        }
        "huawei" {
            dimension 'target'
            versionNameSuffix "-hw"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_18
        targetCompatibility JavaVersion.VERSION_18
    }

    kotlinOptions {
        //noinspection GrDeprecatedAPIUsage
        jvmTarget = '18'
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging true
        }
        resources {
            excludes += ['META-INF/ASL2.0']
        }
    }
    lint {
        disable 'MissingTranslation', 'InvalidPackage', 'BatteryLife', 'ImpliedQuantity', 'MissingQuantity', 'InvalidWakeLockTag', 'UniquePermission'
    }
}

if (file('user.gradle').exists()) {
    apply from: 'user.gradle'
}

android.applicationVariants.configureEach { variant ->
    variant.outputs.each { output ->
        output.outputFileName = variant.applicationId + "-" + variant.versionCode + variant.versionName.substring(version.length()) + ".apk"
    }
}
